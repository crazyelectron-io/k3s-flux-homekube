# infrastructure/base/grafana-alloy/release.yaml 
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: alloy
spec:
  releaseName: alloy
  chart:
    spec:
      chart: alloy
      interval: 22h
      sourceRef:
        kind: HelmRepository
        name: grafana
  interval: 1h
  install:
    remediation:
      retries: 2
  upgrade:
    remediation:
      retries: 2
  values:
    alloy:
      envFrom:
        - configMapRef:
            name: alloy-env
      configMap:
        create: false
        name: alloy-config
        key: config.alloy
      # -- Path to where Grafana Alloy stores data (for example, the Write-Ahead Log).
      # By default, data is lost between reboots.
      storagePath: /tmp/alloy
      listenAddr: 0.0.0.0
      listenPort: 12345
      listenScheme: HTTP
      uiPathPrefix: /
      enableReporting: false
      extraPorts: []
      mounts:
        # -- Mount /var/log from the host into the container for log collection.
        varlog: true
        # -- Mount /var/lib/docker/containers from the host into the container for log collection.
        dockercontainers: true
        # -- Extra volume mounts to add into the Grafana Alloy container.
        extra: []
      resources: {}
    image:
      registry: "${HARBOR_REGISTRY}"
      repository: alloy
      tag: v1.3.1
      pullPolicy: IfNotPresent
    # Options for the extra controller used for config reloading.
    configReloader:
      enabled: true
      image:
        registry: "${HARBOR_REGISTRY}"
        repository: configmap-reload  # was: jimmidyson/configmap-reload
        tag: v0.12.0
      customArgs: []
      resources:
        requests:
          cpu: "1m"
          memory: "5Mi"
    controller:
      type: 'daemonset'
      dnsPolicy: ClusterFirst
      updateStrategy: {}
      initContainers: []
    service:
      enabled: true
      type: ClusterIP
      clusterIP: ''
      internalTrafficPolicy: Cluster
      annotations: {}
    serviceMonitor:
      enabled: true
      additionalLabels: {}
      # -- Scrape interval. If not set, the Prometheus default scrape interval is used.
      interval: ""
      # -- MetricRelabelConfigs to apply to samples after scraping, but before ingestion.
      # ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#relabelconfig
      metricRelabelings: []
      # - action: keep
      #   regex: 'kube_(daemonset|deployment|pod|namespace|node|statefulset).+'
      #   sourceLabels: [__name__]
      tlsConfig: {}
      # -- RelabelConfigs to apply to samples before scraping
      # ref: https://github.com/prometheus-operator/prometheus-operator/blob/main/Documentation/api.md#relabelconfig
      relabelings: []
      # - sourceLabels: [__meta_kubernetes_pod_node_name]
      #   separator: ;
      #   regex: ^(.*)$
      #   targetLabel: nodename
      #   replacement: $1
      #   action: replace
    ingress:
      # We'll use Traefik IngressRoutes (#TODO: Migrate to Gateway)
      enabled: false
