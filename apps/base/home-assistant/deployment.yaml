# apps/base/home-assistant/deployment.yaml
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: homeassistant
  labels:
    app.kubernetes.io/name: homeassistant
spec:
  progressDeadlineSeconds: 300
  replicas: 1
  serviceName: homeassistant-app
  revisionHistoryLimit: 0
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: homeassistant
  template:
    metadata:
      labels:
        app.kubernetes.io/name: homeassistant
    spec:
      initContainers:
        # init container to create config.json config file (if not exist)
        - name: init-homeassistant
          image: debian
          command: ['sh', '-c', 'cp -f /config/*.yaml /ha/. && mkdir -p /ha/blueprints && echo "Home Assistant config created"']
          volumeMounts:
            - name: homeassistant-data
              mountPath: /ha
            - name: default-config
              mountPath: /config
        - name: init-hacs
          image: debian
          command: ['bash', '-c', 'cp /hacs/get_hacs.sh . && chmod +x get_hacs.sh && ./get_hacs.sh']
          volumeMounts:
            - name: homeassistant-data
              mountPath: /config
            - name: hacs-install
              mountPath: /hacs
      containers:
        - name: ha-ssh-access
          image: openssh-server
          ports:
            - containerPort: 22
          volumeMounts:
            - name: homeassistant-data
              mountPath: /config
            - name: localtime
              mountPath: '/etc/localtime'
              readOnly: true
          env:
          - name: PUID
            value: "1000"
          - name: PGID
            value: "1000"
          - name: TZ
            value: "Europe/Amsterdam"
          - name: USER_NAME
            value: "{{shell_user}}"
          - name: USER_PASSWORD
            value: "{{shell_password}}"
          - name: PASSWORD_ACCESS
            value: "false"
          - name: SUDO_ACCESS
            value: "true"
          - name: PUBLIC_KEY_URL
            value: "{{ssh_key_url}}"
          resources:
            limits:
              memory: "2048Mi"
              cpu: "1"
            requests:
              memory: "512Mi"
              cpu: 300m
        - name: homeassistant
          image: home-assistant
          imagePullPolicy: IfNotPresent
          resources:
            limits:
              memory: "2048Mi"
              cpu: "1"
            requests:
              memory: "512Mi"
              cpu: 300m
          livenessProbe:
            httpGet:
              path: /
              port: 8123
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 5
          securityContext:
            privileged: true
          ports:
            - containerPort: 8123
            - containerPort: 5683
          volumeMounts:
            - name: homeassistant-data
              mountPath: /config
            - name: localtime
              mountPath: '/etc/localtime'
              readOnly: true
          env:
            - name: TZ
              value: Europe/Amsterdam
      volumes:
        - name: homeassistant-data
          persistentVolumeClaim:
            claimName: homeassistant-data
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: hacs-install
          configMap:
            name: hacs-install
        - name: default-config
          configMap:
            name: homeassistant-conf
